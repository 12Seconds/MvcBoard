@model MvcBoardAdmin.Models.Member.MemberListViewModel;

<div class="member_list">

    <div class="total_count">(총 @(Model.TotalRowCount)건)</div>

    <div class="item labels">
        <div class="number">고유 번호</div>
        <div class="id">아이디</div>
        <div class="name">닉네임</div>
        <div class="image">프로필 이미지</div>
        <div class="authority">권한</div>
        <div class="tags">상태</div>
    </div>

    @foreach(User user in Model.MemberList)
    {
        @* <a href="javascript:updateMemberEditor(@user.UserId);"> *@
            <div class="item member @(user.Authority) @(user.IsDeleted ? "deleted" : "")">
                <div class="number">@user.UserId</div>
                <div class="id">@user.Id</div>
                <div class="name">@user.Name</div>
                <div class="image">@user.Image</div>
                <div class="authority">@user.Authority</div>
                <div class="tags">
                    @if (user.IsDeleted) { <span class="icon deleted">삭제</span> }
                </div>
                <button type="button" onclick="updateMemberEditor(@user.UserId)" class=" btn btn-outline-primary btn-sm edit_button">수정</button>
                <button type="button" onclick="deleteMember(@user.UserId)" class=" btn btn-outline-danger btn-sm edit_button">삭제</button>
            </div>
        @* </a> *@
    }

    @* 페이지 인디케이터 *@
    @if (Model.MemberList.Count > 0)
    {
        <div class="page_indicator">
            @* TODO a 태그 클릭 처리 방법 *@
            <a href="javascript:updateMemeberList(1);">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="20" height="20" rx="10" fill="#C4C4C4"></rect><path d="M9.99999 9.33317L14.6115 6.25867C14.6491 6.23362 14.6929 6.21924 14.738 6.21708C14.7832 6.21492 14.8281 6.22505 14.868 6.2464C14.9079 6.26774 14.9412 6.2995 14.9644 6.33829C14.9877 6.37708 15 6.42145 15 6.46667V13.5327C15 13.5779 14.9877 13.6223 14.9644 13.661C14.9412 13.6998 14.9079 13.7316 14.868 13.7529C14.8281 13.7743 14.7832 13.7844 14.738 13.7823C14.6929 13.7801 14.6491 13.7657 14.6115 13.7407L9.99999 10.6662V13.5327C9.99997 13.5779 9.98768 13.6223 9.96443 13.661C9.94119 13.6998 9.90786 13.7316 9.86799 13.7529C9.82812 13.7743 9.78321 13.7844 9.73804 13.7823C9.69287 13.7801 9.64914 13.7657 9.61149 13.7407L4.31199 10.2077C4.27775 10.1848 4.24968 10.1539 4.23026 10.1176C4.21084 10.0813 4.20068 10.0408 4.20068 9.99967C4.20068 9.95851 4.21084 9.918 4.23026 9.88171C4.24968 9.84543 4.27775 9.8145 4.31199 9.79167L9.61149 6.25867C9.64914 6.23362 9.69287 6.21924 9.73804 6.21708C9.78321 6.21492 9.82812 6.22505 9.86799 6.2464C9.90786 6.26774 9.94119 6.2995 9.96443 6.33829C9.98768 6.37708 9.99997 6.42145 9.99999 6.46667V9.33317Z" fill="white"></path></svg>
                처음
            </a>

            @for (var i = Model.IndicatorRange.start; i <= Model.IndicatorRange.end; i++)
            {
                <a href="javascript:updateMemeberList('@i');" class=@(i == Model.PageIndex ? "selected" : "")>
                    @i
                </a>
            }

            <a href="javascript:updateMemeberList('@Model.TotalPageCount');">
            @* <a href="#" id="anchorId"> *@
                마지막
                <svg style="transform: rotate(180deg)" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="20" height="20" rx="10" fill="#C4C4C4"></rect><path d="M9.99999 9.33317L14.6115 6.25867C14.6491 6.23362 14.6929 6.21924 14.738 6.21708C14.7832 6.21492 14.8281 6.22505 14.868 6.2464C14.9079 6.26774 14.9412 6.2995 14.9644 6.33829C14.9877 6.37708 15 6.42145 15 6.46667V13.5327C15 13.5779 14.9877 13.6223 14.9644 13.661C14.9412 13.6998 14.9079 13.7316 14.868 13.7529C14.8281 13.7743 14.7832 13.7844 14.738 13.7823C14.6929 13.7801 14.6491 13.7657 14.6115 13.7407L9.99999 10.6662V13.5327C9.99997 13.5779 9.98768 13.6223 9.96443 13.661C9.94119 13.6998 9.90786 13.7316 9.86799 13.7529C9.82812 13.7743 9.78321 13.7844 9.73804 13.7823C9.69287 13.7801 9.64914 13.7657 9.61149 13.7407L4.31199 10.2077C4.27775 10.1848 4.24968 10.1539 4.23026 10.1176C4.21084 10.0813 4.20068 10.0408 4.20068 9.99967C4.20068 9.95851 4.21084 9.918 4.23026 9.88171C4.24968 9.84543 4.27775 9.8145 4.31199 9.79167L9.61149 6.25867C9.64914 6.23362 9.69287 6.21924 9.73804 6.21708C9.78321 6.21492 9.82812 6.22505 9.86799 6.2464C9.90786 6.26774 9.94119 6.2995 9.96443 6.33829C9.98768 6.37708 9.99997 6.42145 9.99999 6.46667V9.33317Z" fill="white"></path></svg>
            </a>
        </div>
    }
    
    @* 업데이트용 *@
    @using (Html.AjaxBeginForm("MemberListPartial", "Member", new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "member_list_container"@* , OnComplete = ""  *@}, new { id = "MemberListForm_update" }))
    {
        @Html.Hidden("SearchFilter", Model.ExSearchFilter);
        @Html.Hidden("SearchWord", Model.ExSearchWord);
        @Html.Hidden("Page", Model.PageIndex, new { id = "page_index_val" });
    }

    @* 삭제용 *@
    @using (Html.AjaxBeginForm("Delete", "Member", new AjaxOptions { HttpMethod = "Post", OnComplete = "OnDeleteResponse" }, new { id = "DeleteMemberForm" }))
    {
        @Html.Hidden("UserId", 0, new { id = "delete_userId_val" });
    }
    
</div>

<script>

    /* 유저 리스트 업데이트 함수 -> Index.cshtml 이관 */
    /*
    function updateMemeberList(page) {
        $('#page_index_val').val(page);
        $('#MemberListForm_update').submit();
    }
    */

   /* 유저 삭제 요청 */
    function deleteMember(userId) {
        if (confirm("해당 유저를 정말 삭제하시겠습니까?")) {
            $('#delete_userId_val').val(userId);
            $('#DeleteMemberForm').submit();
        }
    }

    /* 유저 삭제 요청 응답 핸들러 */
    function OnDeleteResponse(xhr, status) {
        // if (xhr.status === 200) {} 항상 return OK 로 반환

        var response = JSON.parse(xhr.responseText);

        switch (response.resultCode) {
            // 성공
            case 200: {
                updateMemeberList(1);
                // memberEditorExit();
                break;
            }
            // 입력값 오류 (ModelState 참고하여 처리 필요)
            case 201: {
                showAlert(response.message, false);
                break;
            }
            default: {
                showAlert(response.message, false);
                break;
            }
        }
    }

</script>